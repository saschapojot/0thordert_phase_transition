cmake_minimum_required(VERSION 3.23)
project(t_phase_transition)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)


include_directories("/public/home/hkust_jwliu_1/cppLocal/armadillo/include")
include_directories("/public/home/hkust_jwliu_1/cppLocal/msgpack-c-cpp_master/include")
include_directories("/public/home/hkust_jwliu_1/cppLocal/openblas/include")

add_executable(run1d run1d.cpp 1d/1d.cpp)
add_executable(genA genA.cpp)

add_executable(runV1LJ2AtomParseXML runV1LJ2AtomParseXML.cpp version1/LJPot/parseXML.cpp)

add_executable(runV1LJ2Atom runV1LJ2Atom.cpp version1/LJPot/version1LJPot2Atom.cpp)

set_source_files_properties(
        1d/1d.cpp
        PROPERTIES

        COMPILE_OPTIONS "-O3"
)

set_source_files_properties(
        version1/LJPot/version1LJPot2Atom.cpp
        PROPERTIES

        COMPILE_OPTIONS "-O3"
)

set_source_files_properties(
        version1/LJPot/parseXML.cpp
        PROPERTIES

        COMPILE_OPTIONS "-O3"
)

set(Boost_NO_SYSTEM_PATHS YES)
if (Boost_NO_SYSTEM_PATHS)
    set(Boost_ROOT "/public/home/hkust_jwliu_1/cppLocal/boostBuild")
    set(Boost_INCLUDE_DIR "/public/home/hkust_jwliu_1/cppLocal/boostBuild/include")
    set(Boost_LIBRARY_DIR "/public/home/hkust_jwliu_1/cppLocal/boostBuild/lib")
endif (Boost_NO_SYSTEM_PATHS)

#find_package(Boost  REQUIRED COMPONENTS ALL)
find_package(Boost  REQUIRED serialization filesystem json)
if(Boost_FOUND)
    message(STATUS "boost root is: ${Boost_ROOT}")
    message(STATUS "boost include path is : ${Boost_INCLUDE_DIR}")
    message(STATUS "boost library path is : ${Boost_LIBRARY_DIR}")
    message(STATUS "boost libraries is : ${Boost_LIBRARIES}")
    include_directories(${Boost_INCLUDE_DIR})
    link_directories(${Boost_LIBRARY_DIR})
else()
    message(WARNING "boost not found.")
endif()

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lgfortran")

file(GLOB LIBS_SO "/public/home/hkust_jwliu_1/cppLocal/armadillo/lib64/*.so")
target_link_libraries(run1d ${LIBS_SO})
target_link_libraries(genA ${LIBS_SO})
target_link_libraries(runV1LJ2Atom ${LIBS_SO})
target_link_libraries(runV1LJ2AtomParseXML ${LIBS_SO})

file(GLOB LIBS_A "/public/home/hkust_jwliu_1/cppLocal/lapack/liblapack.a")
target_link_libraries(run1d ${LIBS_A})
target_link_libraries(genA ${LIBS_A})
target_link_libraries(runV1LJ2Atom ${LIBS_A})
target_link_libraries(runV1LJ2AtomParseXML ${LIBS_A})

file(GLOB LIBS_SO "/public/home/hkust_jwliu_1/cppLocal/openblas/lib/*.so")
target_link_libraries(run1d ${LIBS_SO})
target_link_libraries(genA ${LIBS_SO})
target_link_libraries(runV1LJ2Atom ${LIBS_SO})
target_link_libraries(runV1LJ2AtomParseXML ${LIBS_SO})


target_link_libraries(run1d Boost::serialization)
target_link_libraries(run1d Boost::filesystem)
target_link_libraries(run1d Boost::json)

target_link_libraries(runV1LJ2AtomParseXML Boost::serialization)
target_link_libraries(runV1LJ2AtomParseXML Boost::filesystem)
target_link_libraries(runV1LJ2AtomParseXML Boost::json)

target_link_libraries(runV1LJ2Atom Boost::serialization)
target_link_libraries(runV1LJ2Atom Boost::filesystem)
target_link_libraries(runV1LJ2Atom  Boost::json)




